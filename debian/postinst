#!/bin/bash

set -e

SCRIPT=${0##*/}
SUCCESS=0
FAILURE=1

die()
{
    msg=$1
    err_no=$2
    echo "$SCRIPT: $msg" 1>&2
    exit ${err_no:-$FAILURE}
}

# Make sure the database is installed and running.

LDS_PACKAGE=linz-asp-uploader
LDS_SHARE_DIR=/usr/share/$LDS_PACKAGE
LDS_LOG_DIR=/var/log/$LDS_PACKAGE
PG_USER=postgres
LDS_USER=lds_bde
DB=bde_db
PG_SERVICE=postgresql
PG_INIT=/etc/init.d/$PG_SERVICE
USE_SERVICE=0

if [ -x /usr/sbin/service ]; then
    USE_SERVICE=1
fi

if [ ! -x $PG_INIT ]; then
    die "Can not find $PG_INIT init script"
fi

if [ $USE_SERVICE ]; then
  cmd="service $PG_SERVICE status"
else
  cmd="$PG_INIT status"
fi
$cmd
rc=$?
if [ $rc -ne $SUCCESS ]; then
    if [ $USE_SERVICE ]; then
        cmd="service $PG_SERVICE start"
    else
        cmd="$PG_INIT start"
    fi
    $cmd
    rc=$?
    if [ $rc -ne $SUCCESS ]; then
      die "There was a problem starting the $PG_SERVICE service"
    fi
fi

SQL_FILES="
    $LDS_SHARE_DIR/sql/asp_schema.sql
    $LDS_SHARE_DIR/sql/patches.sql
"

for SQL_FILE in $SQL_FILES
do
    su -l $PG_USER -c "psql -d $DB -f $SQL_FILE"
    rc=$?
    if [ $rc -ne $SUCCESS ] ; then
        die "Could install SQL file: $SQL_FILE" $rc
    fi
done


# now create log directory if it does not exist.

if [ ! -d $LDS_LOG_DIR ]; then
    mkdir -p $LDS_LOG_DIR
fi
chown -R $LDS_USER:adm $LDS_LOG_DIR;
chmod 0755 $LDS_LOG_DIR;

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
